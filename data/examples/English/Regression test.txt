#----------------------------------------------------------------------------
# Purpose: To define the regression test for the English language
# Version: Thinknowlogy 2023 (Shaking tree)
#----------------------------------------------------------------------------
# Copyright (C) 2023, Menno Mafait. Your suggestions, modifications,
# corrections and bug reports are welcome at https://mafait.org/contact
#----------------------------------------------------------------------------

#-----------
# General
#-----------
#Dev#Read the test file "English/ambiguity/Acceptance - Boston - United States - United Kingdom".
#Dev#Read the test file "English/ambiguity/Acceptance - Collection in different order".
#Dev#Read the test file "English/ambiguity/Acceptance - Collection subset".
#Dev#Read the test file "English/ambiguity/Acceptance - Expanded collection".
#Dev#Read the test file "English/ambiguity/Boston".
#Dev#Read the test file "English/ambiguity/Duplicates".
#Dev#Read the test file "English/ambiguity/Multiple specifications as well as multiple relations".
#Dev#Read the test file "English/ambiguity/Nero".
#Dev#Read the test file "English/ambiguity/US presidents".

#Dev#Read the test file "English/conflict/Assignment in conflict with definition specification".
#Dev#Read the test file "English/conflict/Definition specification is already assigned".
#Dev#Read the test file "English/conflict/Generalization word and relation word are the same".
#Dev#Read the test file "English/conflict/No conflict - parent - father - mother".
#Dev#Read the test file "English/conflict/No conflict on non-exclusive collection".

#Dev#Read the test file "English/programming/Connect-Four - Column is full".
#Dev#Read the test file "English/programming/Connect-Four - Display information about the set".
#Dev#Read the test file "English/programming/Connect-Four - Eager to win".
#Dev#Read the test file "English/programming/Connect-Four - The solve level is high".
#Dev#Read the test file "English/programming/Greeting".
#Dev#Read the test file "English/programming/Tower of Hanoi (even number of discs)".
#Dev#Read the test file "English/programming/Tower of Hanoi (odd number of discs)".

#Dev#Read the test file "English/question answering/Context - Question with generalization pronoun".
#Dev#Read the test file "English/question answering/Just a few questions (1)".
#Dev#Read the test file "English/question answering/Just a few questions (2)".
#Dev#Read the test file "English/question answering/Just a few questions (3)".
#Dev#Read the test file "English/question answering/Just a few questions (4)".
#Dev#Read the test file "English/question answering/Just a few questions (5)".
#Dev#Read the test file "English/question answering/Specification-generalization - Question (across definitions)".
#Dev#Read the test file "English/question answering/Specification-generalization - Question (letter)".
#Dev#Read the test file "English/question answering/Specification-generalization - Question (number)".
#Dev#Read the test file "English/question answering/This question is more specific (without relation)".

#Dev#Read the test file "English/reasoning/Acceptance - A small letter is small".
#Dev#Read the test file "English/reasoning/Acceptance - John is a person, John is tall and John is a boy".
#Dev#Read the test file "English/reasoning/Acceptance of only one article in exclusive specification".
#Dev#Read the test file "English/reasoning/Acceptance of sentence ending without colon".
#Dev#Read the test file "English/reasoning/Additional test".
#Dev#Read the test file "English/reasoning/Adjective".
#Dev#Read the test file "English/reasoning/Basic reasoning".
#Dev#Read the test file "English/reasoning/Boiling point".
#Dev#Read the test file "English/reasoning/Changed assumption level (1)".
#Dev#Read the test file "English/reasoning/Changed assumption level (2)".
#Dev#Read the test file "English/reasoning/Collect afterwards - Every father is a parent - Every mother is a parent".
#Dev#Read the test file "English/reasoning/Collect afterwards - Every father is a parent and every mother is a parent".
#Dev#Read the test file "English/reasoning/Collect afterwards - John-Anna-Paul-Joe - John-Anna-Laura".
#Dev#Read the test file "English/reasoning/Collect afterwards - John-Paul-Joe - John-Laura".
#Dev#Read the test file "English/reasoning/Collect afterwards - Past tense".
#Dev#Read the test file "English/reasoning/Collect afterwards - Uncertainty".
#Dev#Read the test file "English/reasoning/Condensation point".
#Dev#Read the test file "English/reasoning/Every car has wheels".
#Dev#Read the test file "English/reasoning/Glass".
#Dev#Read the test file "English/reasoning/Indefinite article doesn't match with noun".
#Dev#Read the test file "English/reasoning/James was a father - James was the father of Peter".
#Dev#Read the test file "English/reasoning/John is a father".
#Dev#Read the test file "English/reasoning/John is a parent of Paul - Joe has 2 parents".
#Dev#Read the test file "English/reasoning/John is a parent of Paul - John is a parent of Joe".
#Dev#Read the test file "English/reasoning/Knowledge of organisms (1)".
#Dev#Read the test file "English/reasoning/Knowledge of organisms (2)".
#Dev#Read the test file "English/reasoning/My conclusions that are confirmed (with relation, without family definition)".
#Dev#Read the test file "English/reasoning/Paul has a parent, called John - Paul has a parent, called Anna".
#Dev#Read the test file "English/reasoning/Scientific challenge".
#Dev#Read the test file "English/reasoning/Scientific challenge - Confirmation".
#Dev#Read the test file "English/reasoning/Sentence with possessive verb (without family definition)".
#Dev#Read the test file "English/reasoning/Specification-generalization - Acceptance of sentences (plural)".
#Dev#Read the test file "English/reasoning/Specification-generalization - Acceptance of sentences (singular)".
#Dev#Read the test file "English/reasoning/Specification-generalization - Mammals (plural)".
#Dev#Read the test file "English/reasoning/Specification-generalization - Mammals (singular)".
#Dev#Read the test file "English/reasoning/Specification-generalization - Single specification".
#Dev#Read the test file "English/reasoning/Switch language".
#Dev#Read the test file "English/reasoning/The only option left - Addison is not a woman".
#Dev#Read the test file "English/reasoning/The only option left - Boat".
#Dev#Read the test file "English/reasoning/The only option left - Option".
#Dev#Read the test file "English/reasoning/Tom is a cat".
#Dev#Read the test file "English/reasoning/Uncertainty and past tense".
#Dev#Read the test file "English/reasoning/Unique relation".

#-----------
# Family
#-----------
#Dev#Read the test file "English/ambiguity/family/Question missing relation context".
#Dev#Read the test file "English/ambiguity/family/Sentence missing relation context - I assume you mean".

#Dev#Read the test file "English/conflict/family/Anna is a son".
#Dev#Read the test file "English/conflict/family/Anna is the father of Paul, Joe and Laura".
#Dev#Read the test file "English/conflict/family/Joe is a mother".
#Dev#Read the test file "English/conflict/family/John is a boy and a man".
#Dev#Read the test file "English/conflict/family/John is a man and a boy".
#Dev#Read the test file "English/conflict/family/John is a woman".
#Dev#Read the test file "English/conflict/family/John is the mother of Paul".
#Dev#Read the test file "English/conflict/family/John was the father of Paul (before family definition)".
#Dev#Read the test file "English/conflict/family/Maria is a man (accept)".
#Dev#Read the test file "English/conflict/family/Negative conflict - John is not a father".
#Dev#Read the test file "English/conflict/family/Negative conflict - Mary is a mother".
#Dev#Read the test file "English/conflict/family/Negative conflict - Pete is not a father".
#Dev#Read the test file "English/conflict/family/Negative conflict - Sue is the mother of Paul, Joe and Laura".
#Dev#Read the test file "English/conflict/family/No conflict in same sentence".
#Dev#Read the test file "English/conflict/family/No conflict on multiple related specifications".
#Dev#Read the test file "English/conflict/family/Past tense - John was the father of Paul - John is a man".
#Dev#Read the test file "English/conflict/family/Paul has a father, called Anna".
#Dev#Read the test file "English/conflict/family/Paul is a boy - Paul is a man (normal)".
#Dev#Read the test file "English/conflict/family/Paul is a daughter".
#Dev#Read the test file "English/conflict/family/Paul is a man (normal) - Paul is a boy".
#Dev#Read the test file "English/conflict/family/Question in conflict with itself (no prior knowledge)".
#Dev#Read the test file "English/conflict/family/Question in conflict with itself (with knowledge)".
#Dev#Read the test file "English/conflict/family/Sentence in conflict with itself".
#Dev#Read the test file "English/conflict/family/Simple family definition - John is the mother of Paul".

#Dev#Read the test file "English/question answering/family/Assumption through suggestive question".
#Dev#Read the test file "English/question answering/family/Exclusive question".
#Dev#Read the test file "English/question answering/family/I am not sure".
#Dev#Read the test file "English/question answering/family/I had the same question before".
#Dev#Read the test file "English/question answering/family/I only know".
#Dev#Read the test file "English/question answering/family/Indirectly answered questions - John is a father".
#Dev#Read the test file "English/question answering/family/Indirectly answered questions - John is a man".
#Dev#Read the test file "English/question answering/family/Indirectly answered questions - John is masculine".
#Dev#Read the test file "English/question answering/family/Indirectly answered questions (with confirmation)".
#Dev#Read the test file "English/question answering/family/Intelligent answering of questions".
#Dev#Read the test file "English/question answering/family/Is Paul a woman".
#Dev#Read the test file "English/question answering/family/Just a few questions (1)".
#Dev#Read the test file "English/question answering/family/Just a few questions (2)".
#Dev#Read the test file "English/question answering/family/Negative and alternative answers".
#Dev#Read the test file "English/question answering/family/Positive answers".
#Dev#Read the test file "English/question answering/family/Question relation is subset of answer relation".
#Dev#Read the test file "English/question answering/family/Same and similar questions".
#Dev#Read the test file "English/question answering/family/This question is more specific (with relation)".
#Dev#Read the test file "English/question answering/family/You had a related question before".
#Dev#Read the test file "English/question answering/family/You had same-similar question before (with relation)".
#Dev#Read the test file "English/question answering/family/You had same-similar question before (without relation)".
#Dev#Read the test file "English/question answering/family/You had same-similar-related question before (with relation)".
#Dev#Read the test file "English/question answering/family/Your question is more specific (about John)".
#Dev#Read the test file "English/question answering/family/Your question is more specific (about Paul and Joe)".

#Dev#Read the test file "English/reasoning/family/Anna - John - Paul, Joe and Laura".
#Dev#Read the test file "English/reasoning/family/Anna was the mother of Paul, Joe and Laura".
#Dev#Read the test file "English/reasoning/family/Avoid duplicate context".
#Dev#Read the test file "English/reasoning/family/Collect afterwards - Joe-Anna - Laura-John John-Anna-Paul-Joe-Laura".
#Dev#Read the test file "English/reasoning/family/Collect afterwards - John-Anna-Paul-Joe - John-Anna-Laura.txt".
#Dev#Read the test file "English/reasoning/family/Complex (1)".
#Dev#Read the test file "English/reasoning/family/Complex (2)".
#Dev#Read the test file "English/reasoning/family/Complex (3)".
#Dev#Read the test file "English/reasoning/family/Complex (4)".
#Dev#Read the test file "English/reasoning/family/Complex (5)".
#Dev#Read the test file "English/reasoning/family/Complex (6)".
#Dev#Read the test file "English/reasoning/family/Complex (7 - Becky)".
#Dev#Read the test file "English/reasoning/family/Complex (7 - Claudia)".
#Dev#Read the test file "English/reasoning/family/Complex (8)".
#Dev#Read the test file "English/reasoning/family/Complex (9)".
#Dev#Read the test file "English/reasoning/family/Complex (10)".
#Dev#Read the test file "English/reasoning/family/Complex (11)".
#Dev#Read the test file "English/reasoning/family/Complex (12)".
#Dev#Read the test file "English/reasoning/family/Complex (13)".
#Dev#Read the test file "English/reasoning/family/Complex (14)".
#Dev#Read the test file "English/reasoning/family/Complex (15)".
#Dev#Read the test file "English/reasoning/family/Complex (16)".
#Dev#Read the test file "English/reasoning/family/Complex (17)".
#Dev#Read the test file "English/reasoning/family/Complex (18)".
#Dev#Read the test file "English/reasoning/family/Complex (19 - mixed)".
#Dev#Read the test file "English/reasoning/family/Complex (19 - strange)".
#Dev#Read the test file "English/reasoning/family/Complex (20)".
#Dev#Read the test file "English/reasoning/family/Complex (21)".
#Dev#Read the test file "English/reasoning/family/Context - Joe has 2 parents - John is a parent".
#Dev#Read the test file "English/reasoning/family/Context - Specification pronoun".
#Dev#Read the test file "English/reasoning/family/Correcting invalidated assumption (by knowledge)".
#Dev#Read the test file "English/reasoning/family/Correcting invalidated assumption (by opposite suggestive question)".
#Dev#Read the test file "English/reasoning/family/I know (1)".
#Dev#Read the test file "English/reasoning/family/I know (2)".
#Dev#Read the test file "English/reasoning/family/I know (3)".
#Dev#Read the test file "English/reasoning/family/I know (4)".
#Dev#Read the test file "English/reasoning/family/I know (5)".
#Dev#Read the test file "English/reasoning/family/I know (6)".
#Dev#Read the test file "English/reasoning/family/I know (7)".
#Dev#Read the test file "English/reasoning/family/I know (8)".
#Dev#Read the test file "English/reasoning/family/I know (9)".
#Dev#Read the test file "English/reasoning/family/I know (10)".
#Dev#Read the test file "English/reasoning/family/I know (11)".
#Dev#Read the test file "English/reasoning/family/I know (12)".
#Dev#Read the test file "English/reasoning/family/James was the father of Peter (before family definition)".
#Dev#Read the test file "English/reasoning/family/Joe has 2 parents - Joe is a child".
#Dev#Read the test file "English/reasoning/family/Joe has 2 parents - Joe is a son".
#Dev#Read the test file "English/reasoning/family/Joe is a child - Joe has 2 parents".
#Dev#Read the test file "English/reasoning/family/Joe is a child - John and Anna".
#Dev#Read the test file "English/reasoning/family/Joe is a son - Joe has 2 parents".
#Dev#Read the test file "English/reasoning/family/Joe is a son of John and Anna".
#Dev#Read the test file "English/reasoning/family/John - Anna (before family definition)".
#Dev#Read the test file "English/reasoning/family/John - Anna - Paul, Joe and Laura".
#Dev#Read the test file "English/reasoning/family/John - John and Anna".
#Dev#Read the test file "English/reasoning/family/John - Laura - John and Anna".
#Dev#Read the test file "English/reasoning/family/John and Anna - Paul, Joe and Laura".
#Dev#Read the test file "English/reasoning/family/John has 2 sons and a daughter".
#Dev#Read the test file "English/reasoning/family/John has 2 sons and a daughter (before family definition)".
#Dev#Read the test file "English/reasoning/family/John has a daughter and 2 sons".
#Dev#Read the test file "English/reasoning/family/John is a father - Paul has 2 parents".
#Dev#Read the test file "English/reasoning/family/John is a parent - Paul is a child of John and Anna".
#Dev#Read the test file "English/reasoning/family/John is a parent - Paul is a son".
#Dev#Read the test file "English/reasoning/family/John is the father of Paul - Joe - Laura - Claudia".
#Dev#Read the test file "English/reasoning/family/John was the father of Paul, Joe and Laura".
#Dev#Read the test file "English/reasoning/family/Justification report".
#Dev#Read the test file "English/reasoning/family/Laura - Joe - John and Anna - Paul".
#Dev#Read the test file "English/reasoning/family/Laura - Joe - Paul - John and Anna".
#Dev#Read the test file "English/reasoning/family/Laura - John and Anna - Joe".
#Dev#Read the test file "English/reasoning/family/Laura - Paul - John and Anna".
#Dev#Read the test file "English/reasoning/family/Laura has 2 parents - Laura is a daughter".
#Dev#Read the test file "English/reasoning/family/Laura has a father - Laura is a child - John and Anna".
#Dev#Read the test file "English/reasoning/family/Laura is a child - John and Anna".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (child)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (parents)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (John)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (John and Anna)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (John and Anna - reversed)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (John and Paul)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (Paul and John)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (Paul, Joe and Laura)".
#Dev#Read the test file "English/reasoning/family/My assumptions that are confirmed (without relation)".
#Dev#Read the test file "English/reasoning/family/My conclusions that are confirmed (father and mother)".
#Dev#Read the test file "English/reasoning/family/My conclusions that are confirmed (Joe has 2 parents)".
#Dev#Read the test file "English/reasoning/family/My conclusions that are confirmed (with relation)".
#Dev#Read the test file "English/reasoning/family/My conclusions that are confirmed (without relation)".
#Dev#Read the test file "English/reasoning/family/Paul - Anna - Joe - Laura - Joe - John - Paul".
#Dev#Read the test file "English/reasoning/family/Paul - Anna - Joe - Laura - John".
#Dev#Read the test file "English/reasoning/family/Paul - Joe - Laura - John and Anna (parents)".
#Dev#Read the test file "English/reasoning/family/Paul - Joe - Laura - John and Anna (son - daughter)".
#Dev#Read the test file "English/reasoning/family/Paul - John and Anna - Joe - Laura".
#Dev#Read the test file "English/reasoning/family/Paul has a father - Paul has 2 parents".
#Dev#Read the test file "English/reasoning/family/Paul is a boy - Laura is a girl".
#Dev#Read the test file "English/reasoning/family/Paul is a child - John and Anna".
#Dev#Read the test file "English/reasoning/family/Paul is a man - Paul is a son".
#Dev#Read the test file "English/reasoning/family/Paul is the son of John and Anna".
#Dev#Read the test file "English/reasoning/family/Past tense".
#Dev#Read the test file "English/reasoning/family/Person".
#Dev#Read the test file "English/reasoning/family/Sentence with possessive verb".
#Dev#Read the test file "English/reasoning/family/Simple family definition - Complex (7 - Claudia).txt".
#Dev#Read the test file "English/reasoning/family/Simple family definition - John - Paul - Adam.txt".
#Dev#Read the test file "English/reasoning/family/Simple family definition - John and Anna - Paul, Joe and Laura".
#Dev#Read the test file "English/reasoning/family/Simple family definition - John is a father".
#Dev#Read the test file "English/reasoning/family/Simple family definition - Justification report.txt".
#Dev#Read the test file "English/reasoning/family/Skip invalid questions (1)".
#Dev#Read the test file "English/reasoning/family/Skip invalid questions (2)".
#Dev#Read the test file "English/reasoning/family/This information is more specific (non-exclusive)".
#Dev#Read the test file "English/reasoning/family/This information is more specific".
#Dev#Read the test file "English/reasoning/family/You have confirmed at least one relation word".
#Dev#Read the test file "English/reasoning/family/You have confirmed the specification - but not the relation".

#----------------------------
# Info
#----------------------------
Help.
#Dev#Display information about the languages.
#Dev#Display information about the lists.
#Dev#Display information about the users.
#Dev#Display information about the word types.
#Dev#Display the query commands.
#Dev#Display the copyright.
#Dev#Display the GPLv2-license.
#Dev#Display the warranty.